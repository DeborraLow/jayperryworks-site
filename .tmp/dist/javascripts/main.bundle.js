/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ./~/cq-prolyfill/cq-prolyfill.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Copyright Martin Auswöger\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n(function(\n\twindow,\n\tdocument,\n\t/*eslint-disable no-shadow-restricted-names*/\n\tundefined\n\t/*eslint-enable no-shadow-restricted-names*/\n) {\n'use strict';\n\n(function (factory) {\n\t/*global define*/\n\t/* istanbul ignore next: don’t cover module definition */\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn factory;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t/*global module*/\n\telse if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory;\n\t}\n\telse {\n\t\t/*eslint-disable dot-notation*/\n\t\twindow['cqApi'] = factory(window['cqConfig']);\n\t\t/*eslint-enable dot-notation*/\n\t}\n}(function(config) {\n\nconfig = config || {};\n\n// Public API\n/*eslint-disable dot-notation*/\nvar api = {\n\t'reprocess': reprocess,\n\t'reparse': reparse,\n\t'reevaluate': reevaluate,\n\t'config': config,\n};\n/*eslint-enable dot-notation*/\n\nvar observer;\n\nstartObserving();\n\nvar REGEXP_ESCAPE_REGEXP = /[.?*+^$[\\]\\\\(){}|-]/g;\nvar SELECTOR_REGEXP = /\\.?:container\\(\\s*\"?\\s*[a-z-]+(?:(?:\\s+|\\|)[a-z-]+)?\\s*(?:[<>!=]=?)\\s*[^)]+\\s*\\)/gi;\nvar SELECTOR_ESCAPED_REGEXP = /\\.\\\\:container\\\\\\(([a-z-]+)(\\\\\\|[a-z-]+)?(\\\\[<>!=](?:\\\\=)?)([^)]+?)(?:(\\\\[<>!=](?:\\\\=)?)([^)]+?))?\\\\\\)/gi;\nvar ESCAPE_REGEXP = /[.:()<>!=%]/g;\nvar SPACE_REGEXP = / /g;\nvar LENGTH_REGEXP = /^(-?(?:\\d*\\.)?\\d+)(em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc)$/i;\nvar NUMBER_REGEXP = /^-?(?:\\d*\\.)?\\d+$/i;\nvar URL_VALUE_REGEXP = /url\\(\\s*(?:([\"'])(.*?)\\1|([^)\\s]*))\\s*\\)/gi;\nvar ATTR_REGEXP = /\\[.+?\\]/g;\nvar PSEUDO_NOT_REGEXP = /:not\\(/g;\nvar ID_REGEXP = /#[^\\s\\[\\\\#+,.:>~]+/g;\nvar CLASS_REGEXP = /\\.[^\\s\\[\\\\#+,.:>~]+/g;\nvar PSEUDO_ELEMENT_REGEXP = /::[^\\s\\[\\\\#+,.:>~]+/g;\nvar PSEUDO_CLASS_REGEXP = /:[^\\s\\[\\\\#+,.:>~]+/g;\nvar ELEMENT_REGEXP = /[a-z-]+/gi;\nvar FIXED_UNIT_MAP = {\n\t'px': 1,\n\t'pt': 16 / 12,\n\t'pc': 16,\n\t'in': 96,\n\t'cm': 96 / 2.54,\n\t'mm': 96 / 25.4,\n};\n\nvar queries;\nvar containerCache;\nvar styleCache;\nvar processedSheets = createCacheMap();\nvar domMutations = [];\nvar processed = false;\nvar parsed = false;\nvar documentElement = document.documentElement;\nvar styleSheets = document.styleSheets;\nvar createElement = document.createElement.bind(document);\n\n/**\n * @param {function()} callback\n */\nfunction reprocess(callback) {\n\tpreprocess(function() {\n\t\tprocessed = true;\n\t\treparse(callback);\n\t});\n}\n\n/**\n * @param {function()} callback\n */\nfunction reparse(callback) {\n\tif (!processed) {\n\t\treturn reprocess(callback);\n\t}\n\tparseRules();\n\tbuildStyleCache();\n\tparsed = true;\n\treevaluate(true, callback);\n}\n\n/**\n * @param {boolean}         clearContainerCache\n * @param {function()}      callback\n * @param {Array.<Element>} contexts\n */\nfunction reevaluate(clearContainerCache, callback, contexts) {\n\tif (!parsed) {\n\t\treturn reparse(callback);\n\t}\n\tupdateClasses(clearContainerCache, contexts);\n\tif (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * Starts observing DOM events and mutations\n */\nfunction startObserving() {\n\n\tif (config.skipObserving) {\n\t\treturn;\n\t}\n\n\t// Reevaluate now\n\tsetTimeout(reevaluate);\n\n\twindow.addEventListener('DOMContentLoaded', reprocess.bind(undefined, undefined));\n\twindow.addEventListener('load', reprocess.bind(undefined, undefined));\n\twindow.addEventListener('resize', reevaluate.bind(undefined, true, undefined, undefined));\n\n\tvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\tif (MutationObserver) {\n\t\tobserver = new MutationObserver(checkMutations);\n\t\tobserver.observe(document.documentElement, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t});\n\t}\n\telse {\n\t\twindow.addEventListener('DOMNodeInserted', onDomMutate);\n\t\twindow.addEventListener('DOMNodeRemoved', onDomMutate);\n\t}\n\n}\n\n/**\n * Check DOM mutations and reprocess or reevaluate\n *\n * @param  {Array.<MutationRecord>} mutations\n */\nfunction checkMutations(mutations) {\n\n\tvar addedNodes = [];\n\tvar stylesChanged = false;\n\n\tvar replacedSheets = [];\n\tprocessedSheets.forEach(function(newNode) {\n\t\treplacedSheets.push(newNode);\n\t});\n\n\tarrayFrom(mutations).forEach(function(mutation) {\n\n\t\taddedNodes.push.apply(addedNodes, arrayFrom(mutation.addedNodes).filter(function(node) {\n\t\t\treturn node.nodeType === 1;\n\t\t}));\n\n\t\tarrayFrom(mutation.removedNodes).forEach(function(node) {\n\t\t\tvar index = addedNodes.indexOf(node);\n\t\t\tif (index !== -1) {\n\t\t\t\taddedNodes.splice(index, 1);\n\t\t\t}\n\t\t\telse if (\n\t\t\t\t(node.tagName === 'LINK' || node.tagName === 'STYLE')\n\t\t\t\t&& replacedSheets.indexOf(node) === -1\n\t\t\t) {\n\t\t\t\tstylesChanged = true;\n\t\t\t}\n\t\t});\n\n\t});\n\n\taddedNodes.forEach(function(node) {\n\t\tif (node.sheet && replacedSheets.indexOf(node) === -1) {\n\t\t\tstylesChanged = true;\n\t\t}\n\t});\n\n\tif (stylesChanged) {\n\t\treprocess();\n\t}\n\telse if (addedNodes.length) {\n\t\treevaluate(false, undefined, addedNodes);\n\t}\n\n}\n\n/**\n * Event handler for DOMNodeInserted and DOMNodeRemoved\n *\n * @param  {MutationEvent} event\n */\nfunction onDomMutate(event) {\n\n\tvar mutation = {\n\t\taddedNodes: [],\n\t\tremovedNodes: [],\n\t};\n\tmutation[\n\t\t(event.type === 'DOMNodeInserted' ? 'added' : 'removed') + 'Nodes'\n\t] = [event.target];\n\n\tdomMutations.push(mutation);\n\n\t// Delay the call to checkMutations()\n\tsetTimeout(function() {\n\t\tcheckMutations(domMutations);\n\t\tdomMutations = [];\n\t});\n\n}\n\n/**\n * Step 1: Preprocess all active stylesheets in the document\n *\n * Look for stylesheets that contain container queries and escape them to be\n * readable by the browser, e.g. convert `:container(width >= 10px)` to\n * `\\:container\\(width\\>\\=10px\\)`\n *\n * @param {function()} callback\n */\nfunction preprocess(callback) {\n\n\tvar sheets = arrayFrom(styleSheets);\n\n\t// Check removed stylesheets\n\tprocessedSheets.forEach(function(newNode, node) {\n\t\tif (sheets.indexOf(node.sheet) === -1 && sheets.indexOf(newNode.sheet) !== -1 && newNode.parentNode) {\n\t\t\tsheets.splice(sheets.indexOf(newNode.sheet), 1);\n\t\t\tnewNode.parentNode.removeChild(newNode);\n\t\t}\n\t});\n\n\tvar done = -1;\n\tfunction step() {\n\t\tdone++;\n\t\tif (done === sheets.length) {\n\t\t\tcallback();\n\t\t}\n\t}\n\tsheets.forEach(function(sheet) {\n\t\tpreprocessSheet(sheet, step);\n\t});\n\tstep();\n\n}\n\n/**\n * @param {CSSStyleSheet} sheet\n * @param {function()}    callback\n */\nfunction preprocessSheet(sheet, callback) {\n\tif (sheet.disabled) {\n\t\tcallback();\n\t\treturn;\n\t}\n\tif (config.postcss) {\n\t\tvar rulesLength = -1;\n\t\ttry {\n\t\t\trulesLength = sheet.cssRules.length;\n\t\t}\n\t\tcatch(e) {\n\t\t\t// Do nothing\n\t\t}\n\t\t// Check if cssRules is accessible\n\t\tif (rulesLength !== -1) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t}\n\tvar ownerNode = sheet.ownerNode;\n\tvar tag = ownerNode && ownerNode.tagName;\n\tif (tag === 'LINK' && !processedSheets.has(ownerNode)) {\n\t\tloadExternal(ownerNode.href, function(cssText) {\n\t\t\t// Check again because loadExternal is async\n\t\t\tif (sheet.disabled || !cssText) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpreprocessStyle(ownerNode, fixRelativeUrls(cssText, ownerNode.href));\n\t\t\tcallback();\n\t\t});\n\t}\n\telse if (tag === 'STYLE') {\n\t\tpreprocessStyle(ownerNode, ownerNode.innerHTML);\n\t\tcallback();\n\t}\n\telse {\n\t\tcallback();\n\t}\n}\n\n/**\n * Load external file via AJAX\n *\n * @param {string}           href\n * @param {function(string)} callback Gets called with the response text on\n *                                    success or empty string on failure\n */\nfunction loadExternal(href, callback) {\n\tvar isDone = false;\n\tvar done = function(response) {\n\t\tif (!isDone) {\n\t\t\tcallback(response || '');\n\t\t}\n\t\tisDone = true;\n\t};\n\tvar xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState !== 4) {\n\t\t\treturn;\n\t\t}\n\t\tdone(xhr.status === 200 && xhr.responseText);\n\t};\n\ttry {\n\t\txhr.open('GET', href);\n\t\txhr.send();\n\t}\n\tcatch(e) {\n\t\tif (window.XDomainRequest) {\n\t\t\txhr = new XDomainRequest();\n\t\t\txhr.onprogress =\n\t\t\t\t/* istanbul ignore next: fix for a rare IE9 bug */\n\t\t\t\tfunction() {};\n\t\t\txhr.onload = xhr.onerror = xhr.ontimeout = function() {\n\t\t\t\tdone(xhr.responseText);\n\t\t\t};\n\t\t\ttry {\n\t\t\t\txhr.open('GET', href);\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch(e2) {\n\t\t\t\tdone();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone();\n\t\t}\n\t}\n}\n\n/**\n * Replace relative CSS URLs with their absolute counterpart\n *\n * @param  {string} cssText\n * @param  {string} href    URL of the stylesheet\n * @return {string}\n */\nfunction fixRelativeUrls(cssText, href) {\n\tvar base = resolveRelativeUrl(href, document.baseURI);\n\treturn cssText.replace(URL_VALUE_REGEXP, function(match, quote, url1, url2) {\n\t\tvar url = url1 || url2;\n\t\tif (!url) {\n\t\t\treturn match;\n\t\t}\n\t\treturn 'url(' + (quote || '\"') + resolveRelativeUrl(url, base) + (quote || '\"') + ')';\n\t});\n}\n\n/**\n * @param  {string} url\n * @param  {string} base\n * @return {string}\n */\nfunction resolveRelativeUrl(url, base) {\n\tvar absoluteUrl;\n\ttry {\n\t\tabsoluteUrl = new URL(url, base).href;\n\t}\n\tcatch(e) {\n\t\tabsoluteUrl = false;\n\t}\n\tif (!absoluteUrl) {\n\t\tvar baseElement = createElement('base');\n\t\tbaseElement.href = base;\n\t\tdocument.head.insertBefore(baseElement, document.head.firstChild);\n\t\tvar link = createElement('a');\n\t\tlink.href = url;\n\t\tabsoluteUrl = link.href;\n\t\t// Fix for a bug in Opera 12\n\t\tdelete baseElement.href;\n\t\tdocument.head.removeChild(baseElement);\n\t}\n\treturn absoluteUrl;\n}\n\n/**\n * @param {Node}   node    Stylesheet ownerNode\n * @param {string} cssText\n */\nfunction preprocessStyle(node, cssText) {\n\tprocessedSheets.set(node, false);\n\tvar escapedText = escapeSelectors(cssText);\n\tvar rulesLength = -1;\n\tif (escapedText === cssText) {\n\t\ttry {\n\t\t\trulesLength = node.sheet.cssRules.length;\n\t\t}\n\t\tcatch(e) {\n\t\t\trulesLength = -1;\n\t\t}\n\t\t// Check if cssRules is accessible\n\t\tif (rulesLength !== -1) {\n\t\t\treturn;\n\t\t}\n\t}\n\tvar style = createElement('style');\n\tstyle.textContent = escapedText;\n\tstyle.media = node.media || 'all';\n\tnode.parentNode.insertBefore(style, node);\n\tnode.sheet.disabled = true;\n\tprocessedSheets.set(node, style);\n}\n\n/**\n * @param  {string} cssText\n * @return {string}\n */\nfunction escapeSelectors(cssText) {\n\treturn cssText.replace(SELECTOR_REGEXP, function(selector) {\n\t\treturn '.' + selector.substr(selector[0] === '.' ? 1 : 0)\n\t\t\t.replace(/([a-z])(?:\\s+|\\|)([a-z])/gi, '$1\\\\|$2')\n\t\t\t.replace(SPACE_REGEXP, '')\n\t\t\t.replace(/\"/g, '')\n\t\t\t.replace(ESCAPE_REGEXP, '\\\\$&')\n\t\t\t.toLowerCase();\n\t});\n}\n\n/**\n * Step 2: Parse all processed container query rules and store them in `queries`\n * indexed by the preceding selector\n */\nfunction parseRules() {\n\tqueries = {};\n\tvar rules;\n\tfor (var i = 0; i < styleSheets.length; i++) {\n\t\tif (styleSheets[i].disabled) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\trules = styleSheets[i].cssRules;\n\t\t\tif (!rules || !rules.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\tcontinue;\n\t\t}\n\t\tfor (var j = 0; j < rules.length; j++) {\n\t\t\tparseRule(rules[j]);\n\t\t}\n\t}\n}\n\n/**\n * @param {CSSRule} rule\n */\nfunction parseRule(rule) {\n\tif (rule.cssRules) {\n\t\tfor (var i = 0; i < rule.cssRules.length; i++) {\n\t\t\tparseRule(rule.cssRules[i]);\n\t\t}\n\t\treturn;\n\t}\n\tif (rule.type !== 1) {\n\t\treturn;\n\t}\n\tsplitSelectors(rule.selectorText).forEach(function(selector) {\n\t\tselector = escapeSelectors(selector);\n\t\tselector.replace(SELECTOR_ESCAPED_REGEXP, function(match, prop, filter, type1, value1, type2, value2, offset) {\n\t\t\tvar precedingSelector =\n\t\t\t\t(\n\t\t\t\t\tselector.substr(0, offset)\n\t\t\t\t\t+ selector.substr(offset + match.length).replace(/^((?:\\([^)]*\\)|[^\\s>+~])*).*$/, '$1')\n\t\t\t\t)\n\t\t\t\t.replace(SELECTOR_ESCAPED_REGEXP, '')\n\t\t\t\t.replace(PSEUDO_ELEMENT_REGEXP, '')\n\t\t\t\t.replace(/:(?:active|hover|focus|checked|before|after)/gi, '');\n\t\t\tif (!precedingSelector.substr(-1).trim()) {\n\t\t\t\tprecedingSelector += '*';\n\t\t\t}\n\t\t\tvar values = [unescape(value1), unescape(value2)].filter(Boolean);\n\t\t\tvar valueType =\n\t\t\t\t(filter || values[0].match(NUMBER_REGEXP)) ? 'n' :\n\t\t\t\tvalues[0].match(LENGTH_REGEXP) ? 'l' :\n\t\t\t\t's';\n\t\t\tif (valueType === 'n') {\n\t\t\t\tvalues = values.map(parseFloat);\n\t\t\t}\n\t\t\tqueries[precedingSelector + match] = {\n\t\t\t\t_selector: precedingSelector,\n\t\t\t\t_prop: unescape(prop),\n\t\t\t\t_filter: filter && filter.substr(2),\n\t\t\t\t_types: [unescape(type1), unescape(type2)].filter(Boolean),\n\t\t\t\t_values: values,\n\t\t\t\t_valueType: valueType,\n\t\t\t\t_className: unescape(match.substr(1)),\n\t\t\t};\n\t\t});\n\t});\n}\n\n/**\n * Unescape backslash escaped string\n *\n * @param  {string} string\n * @return {string}\n */\nfunction unescape(string) {\n\treturn string && string.replace(/\\\\(.)/g, '$1');\n}\n\n/**\n * Split multiple selectors by `,`\n *\n * @param  {string} selectors\n * @return {Array.<string>}\n */\nfunction splitSelectors(selectors) {\n\treturn (selectors.match(/(?:\\\\.|\"(?:\\\\.|[^\"])*\"|\\([^)]*\\)|[^,])+/g) || [])\n\t\t.map(function(selector) {\n\t\t\treturn selector.trim();\n\t\t});\n}\n\n/**\n * Builds the styleCache needed by getOriginalStyle\n */\nfunction buildStyleCache() {\n\tstyleCache = {\n\t\twidth: {},\n\t\theight: {},\n\t};\n\tvar rules;\n\tfor (var i = 0; i < styleSheets.length; i++) {\n\t\tif (styleSheets[i].disabled) {\n\t\t\tcontinue;\n\t\t}\n\t\ttry {\n\t\t\trules = styleSheets[i].cssRules;\n\t\t\tif (!rules || !rules.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\tcontinue;\n\t\t}\n\t\tbuildStyleCacheFromRules(rules);\n\t}\n}\n\n/**\n * @param {CSSRuleList} rules\n */\nfunction buildStyleCacheFromRules(rules) {\n\tfor (var i = 0; i < rules.length; i++) {\n\t\tif (rules[i].type === 1) { // Style rule\n\t\t\tif (\n\t\t\t\trules[i].style.getPropertyValue('width')\n\t\t\t\t|| rules[i].style.getPropertyValue('height')\n\t\t\t) {\n\t\t\t\tsplitSelectors(escapeSelectors(rules[i].selectorText)).forEach(function(selector) {\n\t\t\t\t\tvar rule = {\n\t\t\t\t\t\t_selector: selector,\n\t\t\t\t\t\t_rule: rules[i],\n\t\t\t\t\t\t_specificity: getSpecificity(selector),\n\t\t\t\t\t};\n\t\t\t\t\tvar rightMostSelector = selector\n\t\t\t\t\t\t.replace(/:[a-z-]+\\([^)]*\\)/i, '')\n\t\t\t\t\t\t.replace(/^.*[^\\\\][\\s>+~]\\s*/, '');\n\t\t\t\t\tif (\n\t\t\t\t\t\trightMostSelector.match(PSEUDO_ELEMENT_REGEXP)\n\t\t\t\t\t\t|| rightMostSelector.match(/:(?:before|after)/i)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trightMostSelector = rightMostSelector\n\t\t\t\t\t\t.replace(PSEUDO_CLASS_REGEXP, '')\n\t\t\t\t\t\t.trim();\n\t\t\t\t\t['width', 'height'].forEach(function(prop) {\n\t\t\t\t\t\tif (!rules[i].style.getPropertyValue(prop)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar match = rightMostSelector.match(ID_REGEXP);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = rightMostSelector.match(CLASS_REGEXP);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = rightMostSelector.match(ELEMENT_REGEXP);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tmatch = [match[0].toLowerCase()];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tmatch = '*';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!styleCache[prop][match[0]]) {\n\t\t\t\t\t\t\tstyleCache[prop][match[0]] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleCache[prop][match[0]].push(rule);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (rules[i].cssRules) {\n\t\t\tbuildStyleCacheFromRules(rules[i].cssRules);\n\t\t}\n\t}\n}\n\n/**\n * Step 3: Loop through the `queries` and add or remove the CSS classes of all\n * matching elements\n *\n * @param {boolean}         clearContainerCache\n * @param {Array.<Element>} contexts\n */\nfunction updateClasses(clearContainerCache, contexts) {\n\n\tif (clearContainerCache || !containerCache) {\n\t\tcontainerCache = createCacheMap();\n\t}\n\n\tif (!Object.keys(queries).length) {\n\t\treturn;\n\t}\n\n\tvar elementsTree = buildElementsTree(contexts);\n\n\twhile(updateClassesRead(elementsTree)) {\n\t\tupdateClassesWrite(elementsTree);\n\t}\n\tupdateClassesWrite(elementsTree);\n\n}\n\n/**\n * Update classes read step\n *\n * @param  {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>} treeNodes\n * @param  {boolean}                                                                                         dontMarkAsDone\n * @return {boolean} True if changes were found\n */\nfunction updateClassesRead(treeNodes, dontMarkAsDone) {\n\tvar hasChanges = false;\n\tvar i, node, j, query;\n\tfor (i = 0; i < treeNodes.length; i++) {\n\t\tnode = treeNodes[i];\n\t\tif (!node._done) {\n\t\t\tfor (j = 0; j < node._queries.length; j++) {\n\t\t\t\tquery = node._queries[j];\n\t\t\t\tvar queryMatches = evaluateQuery(node._element.parentNode, query);\n\t\t\t\tif (queryMatches !== hasClass(node._element, query._className)) {\n\t\t\t\t\tnode._changes.push([queryMatches, query]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode._done = !dontMarkAsDone;\n\t\t}\n\t\thasChanges = updateClassesRead(node._children, dontMarkAsDone || node._changes.length)\n\t\t\t|| node._changes.length\n\t\t\t|| hasChanges;\n\t}\n\treturn hasChanges;\n}\n\n/**\n * Update classes write step\n *\n * @param  {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>} treeNodes\n */\nfunction updateClassesWrite(treeNodes) {\n\tvar node, j;\n\tfor (var i = 0; i < treeNodes.length; i++) {\n\t\tnode = treeNodes[i];\n\t\tfor (j = 0; j < node._changes.length; j++) {\n\t\t\t(node._changes[j][0] ? addClass : removeClass)(node._element, node._changes[j][1]._className);\n\t\t}\n\t\tnode._changes = [];\n\t\tupdateClassesWrite(node._children);\n\t}\n}\n\n/**\n * Build tree of all query elements\n *\n * @param  {Array.<Element>} contexts\n * @return {Array.<{_element: Element, _children: array, _queries: array, _changes: array, _done: boolean}>}\n */\nfunction buildElementsTree(contexts) {\n\n\tcontexts = contexts || [document];\n\n\tvar queriesArray = Object.keys(queries).map(function(key) {\n\t\treturn queries[key];\n\t});\n\n\tvar selector = queriesArray.map(function(query) {\n\t\treturn query._selector;\n\t}).join(',');\n\n\tvar elements = [];\n\tcontexts.forEach(function(context) {\n\t\tfor (var node = context.parentNode; node; node = node.parentNode) {\n\t\t\t// Skip nested contexts\n\t\t\tif (contexts.indexOf(node) !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (context !== document && elementMatchesSelector(context, selector)) {\n\t\t\telements.push(context);\n\t\t}\n\t\telements.push.apply(elements, arrayFrom(context.querySelectorAll(selector)));\n\t});\n\n\tvar tree = [];\n\tvar treeCache = createCacheMap();\n\n\telements.forEach(function(element) {\n\n\t\tif (element === documentElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar treeNode = {\n\t\t\t_element: element,\n\t\t\t_children: [],\n\t\t\t_queries: [],\n\t\t\t_changes: [],\n\t\t\t_done: false,\n\t\t};\n\n\t\tvar children = tree;\n\t\tfor (var node = element.parentNode; node; node = node.parentNode) {\n\t\t\tif (treeCache.get(node)) {\n\t\t\t\tchildren = treeCache.get(node)._children;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttreeCache.set(element, treeNode);\n\n\t\tchildren.push(treeNode);\n\n\t\tqueriesArray.forEach(function(query) {\n\t\t\tif (elementMatchesSelector(element, query._selector)) {\n\t\t\t\ttreeNode._queries.push(query);\n\t\t\t}\n\t\t});\n\n\t});\n\n\treturn tree;\n\n}\n\n/**\n * True if the query matches otherwise false\n *\n * @param  {Element} parent\n * @param  {object}  query\n * @return {boolean}\n */\nfunction evaluateQuery(parent, query) {\n\n\tvar container = getContainer(parent, query._prop);\n\tvar qValues = query._values.slice(0);\n\tvar i;\n\n\tvar cValue;\n\tif (query._prop === 'width' || query._prop === 'height') {\n\t\tcValue = getSize(container, query._prop);\n\t}\n\telse {\n\t\tcValue = getComputedStyle(container).getPropertyValue(query._prop);\n\t}\n\n\tif (query._filter) {\n\t\tvar color = parseColor(cValue);\n\t\tif (query._filter[0] === 'h') {\n\t\t\tcValue = color[0];\n\t\t}\n\t\telse if (query._filter[0] === 's') {\n\t\t\tcValue = color[1];\n\t\t}\n\t\telse if (query._filter[0] === 'l') {\n\t\t\tcValue = color[2];\n\t\t}\n\t\telse if (query._filter[0] === 'a') {\n\t\t\tcValue = color[3];\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (query._valueType === 'l') {\n\t\tfor (i = 0; i < qValues.length; i++) {\n\t\t\tqValues[i] = getComputedLength(qValues[i], parent);\n\t\t}\n\t\tif (typeof cValue === 'string') {\n\t\t\tcValue = getComputedLength(cValue, parent);\n\t\t}\n\t}\n\telse if (query._valueType === 'n') {\n\t\tcValue = parseFloat(cValue);\n\t}\n\telse if (typeof cValue === 'string') {\n\t\tcValue = cValue.trim();\n\t}\n\n\tif ((\n\t\tquery._types[0][0] === '>'\n\t\t|| query._types[0][0] === '<'\n\t) && (\n\t\ttypeof cValue !== 'number'\n\t\t|| typeof qValues[0] !== 'number'\n\t)) {\n\t\treturn false;\n\t}\n\n\tfor (i = 0; i < qValues.length; i++) {\n\t\tif (!(\n\t\t\t(query._types[i] === '>=' && cValue >= qValues[i])\n\t\t\t|| (query._types[i] === '<=' && cValue <= qValues[i])\n\t\t\t|| (query._types[i] === '>' && cValue > qValues[i])\n\t\t\t|| (query._types[i] === '<' && cValue < qValues[i])\n\t\t\t|| (query._types[i] === '=' && cValue === qValues[i])\n\t\t\t|| (query._types[i] === '!=' && cValue !== qValues[i])\n\t\t)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\n}\n\n/**\n * Get the nearest qualified container element starting by the element itself\n *\n * @param  {Element} element\n * @param  {string}  prop    CSS property\n * @return {Element}\n */\nfunction getContainer(element, prop) {\n\n\tvar cache;\n\tif (containerCache.has(element)) {\n\t\tcache = containerCache.get(element);\n\t\tif (cache[prop]) {\n\t\t\treturn cache[prop];\n\t\t}\n\t}\n\telse {\n\t\tcache = {};\n\t\tcontainerCache.set(element, cache);\n\t}\n\n\tif (element === documentElement) {\n\t\tcache[prop] = element;\n\t}\n\n\telse if (prop !== 'width' && prop !== 'height') {\n\t\t// Skip transparent background colors\n\t\tif (prop === 'background-color' && !parseColor(getComputedStyle(element).getPropertyValue(prop))[3]) {\n\t\t\tcache[prop] = getContainer(element.parentNode, prop);\n\t\t}\n\t\telse {\n\t\t\tcache[prop] = element;\n\t\t}\n\t}\n\n\t// Skip inline elements\n\telse if (getComputedStyle(element).display === 'inline') {\n\t\tcache[prop] = getContainer(element.parentNode, prop);\n\t}\n\n\telse if (isFixedSize(element, prop)) {\n\t\tcache[prop] = element;\n\t}\n\n\telse {\n\t\tvar parentContainer = getContainer(element.parentNode, prop);\n\t\tvar parentNode = element.parentNode;\n\t\twhile (getComputedStyle(parentNode).display === 'inline') {\n\t\t\tparentNode = parentNode.parentNode;\n\t\t}\n\t\tif (parentNode === parentContainer && !isIntrinsicSize(element, prop)) {\n\t\t\tcache[prop] = element;\n\t\t}\n\t\telse {\n\t\t\tcache[prop] = parentContainer;\n\t\t}\n\t}\n\n\treturn cache[prop];\n\n}\n\n/**\n * Is the size of the element a fixed length e.g. `1px`?\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {boolean}\n */\nfunction isFixedSize(element, prop) {\n\tvar originalStyle = getOriginalStyle(element, prop);\n\tif (originalStyle && (\n\t\toriginalStyle.match(LENGTH_REGEXP)\n\t\t|| originalStyle.match(/^calc\\([^%]*\\)$/i)\n\t)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Is the size of the element depending on its descendants?\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {boolean}\n */\nfunction isIntrinsicSize(element, prop) {\n\n\tvar computedStyle = getComputedStyle(element);\n\n\tif (computedStyle.display === 'none') {\n\t\treturn false;\n\t}\n\n\tif (computedStyle.display === 'inline') {\n\t\treturn true;\n\t}\n\n\t// Non-floating non-absolute block elements (only width)\n\tif (\n\t\tprop === 'width'\n\t\t&& ['block', 'list-item', 'flex', 'grid'].indexOf(computedStyle.display) !== -1\n\t\t&& computedStyle.cssFloat === 'none'\n\t\t&& computedStyle.position !== 'absolute'\n\t\t&& computedStyle.position !== 'fixed'\n\t) {\n\t\treturn false;\n\t}\n\n\tvar originalStyle = getOriginalStyle(element, prop);\n\n\t// Fixed size\n\tif (originalStyle && originalStyle.match(LENGTH_REGEXP)) {\n\t\treturn false;\n\t}\n\n\t// Percentage size\n\tif (originalStyle && originalStyle.substr(-1) === '%') {\n\t\treturn false;\n\t}\n\n\t// Calc expression\n\tif (originalStyle && originalStyle.substr(0, 5) === 'calc(') {\n\t\treturn false;\n\t}\n\n\t// Elements without a defined size\n\treturn true;\n\n}\n\n/**\n * Get the computed content-box size\n *\n * @param  {Element} element\n * @param  {string}  prop    `width` or `height`\n * @return {number}\n */\nfunction getSize(element, prop) {\n\tvar style = getComputedStyle(element);\n\tif (prop === 'width') {\n\t\treturn element.offsetWidth\n\t\t\t- parseFloat(style.borderLeftWidth)\n\t\t\t- parseFloat(style.paddingLeft)\n\t\t\t- parseFloat(style.borderRightWidth)\n\t\t\t- parseFloat(style.paddingRight);\n\t}\n\telse {\n\t\treturn element.offsetHeight\n\t\t\t- parseFloat(style.borderTopWidth)\n\t\t\t- parseFloat(style.paddingTop)\n\t\t\t- parseFloat(style.borderBottomWidth)\n\t\t\t- parseFloat(style.paddingBottom);\n\t}\n}\n\n/**\n * Get the computed length in pixel of a CSS length value\n *\n * @param  {string}  value\n * @param  {Element} element\n * @return {number}\n */\nfunction getComputedLength(value, element) {\n\tvar length = value.match(LENGTH_REGEXP);\n\tif (!length) {\n\t\treturn parseFloat(value);\n\t}\n\tvalue = parseFloat(length[1]);\n\tvar unit = length[2].toLowerCase();\n\tif (FIXED_UNIT_MAP[unit]) {\n\t\treturn value * FIXED_UNIT_MAP[unit];\n\t}\n\tif (unit === 'vw') {\n\t\treturn value * window.innerWidth / 100;\n\t}\n\tif (unit === 'vh') {\n\t\treturn value * window.innerHeight / 100;\n\t}\n\tif (unit === 'vmin') {\n\t\treturn value * Math.min(window.innerWidth, window.innerHeight) / 100;\n\t}\n\tif (unit === 'vmax') {\n\t\treturn value * Math.max(window.innerWidth, window.innerHeight) / 100;\n\t}\n\t// em units\n\tif (unit === 'rem') {\n\t\telement = documentElement;\n\t}\n\tif (unit === 'ex') {\n\t\tvalue /= 2;\n\t}\n\treturn parseFloat(getComputedStyle(element).fontSize) * value;\n}\n\n/**\n * @param  {Element} element\n * @return {CSSStyleDeclaration}\n */\nfunction getComputedStyle(element) {\n\n\tvar style = window.getComputedStyle(element);\n\n\t// Fix display inline in some browsers\n\tif (style.display === 'inline' && (\n\t\tstyle.position === 'absolute'\n\t\t|| style.position === 'fixed'\n\t\t|| style.cssFloat !== 'none'\n\t)) {\n\t\tvar newStyle = {};\n\t\tfor (var prop in style) {\n\t\t\tif (typeof style[prop] === 'string') {\n\t\t\t\tnewStyle[prop] = style[prop];\n\t\t\t}\n\t\t}\n\t\tstyle = newStyle;\n\t\tstyle.display = 'block';\n\t\tstyle.getPropertyValue = function(property) {\n\t\t\treturn this[property.replace(/-+(.)/g, function(match, char) {\n\t\t\t\treturn char.toUpperCase();\n\t\t\t})];\n\t\t};\n\t}\n\n\treturn style;\n\n}\n\n/**\n * Get the original style of an element as it was specified in CSS\n *\n * @param  {Element} element\n * @param  {string}  prop    Property to return, e.g. `width` or `height`\n * @return {string}\n */\nfunction getOriginalStyle(element, prop) {\n\n\tvar matchedRules = [];\n\tvar value;\n\tvar j;\n\n\tmatchedRules = sortRulesBySpecificity(\n\t\tfilterRulesByElementAndProp(styleCache[prop], element, prop)\n\t);\n\n\t// Add style attribute\n\tmatchedRules.unshift({\n\t\t_rule: {\n\t\t\tstyle: element.style,\n\t\t},\n\t});\n\n\t// Loop through all important styles\n\tfor (j = 0; j < matchedRules.length; j++) {\n\t\tif (\n\t\t\t(value = matchedRules[j]._rule.style.getPropertyValue(prop))\n\t\t\t&& matchedRules[j]._rule.style.getPropertyPriority(prop) === 'important'\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\t// Loop through all non-important styles\n\tfor (j = 0; j < matchedRules.length; j++) {\n\t\tif (\n\t\t\t(value = matchedRules[j]._rule.style.getPropertyValue(prop))\n\t\t\t&& matchedRules[j]._rule.style.getPropertyPriority(prop) !== 'important'\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn undefined;\n\n}\n\n/**\n * Parse CSS color and return as HSLA array\n *\n * @param  {string} color\n * @return {Array.<number>}\n */\nfunction parseColor(color) {\n\tif (!color || !color.split || !color.split('(')[1]) {\n\t\treturn [0, 0, 0, 0];\n\t}\n\tcolor = color.split('(')[1].split(',').map(parseFloat);\n\tif (color[3] === undefined) {\n\t\tcolor[3] = 1;\n\t}\n\treturn rgbaToHsla(color);\n}\n\n/**\n * @param  {Array.<number>} color\n * @return {Array.<number>}\n */\nfunction rgbaToHsla(color) {\n\n\tvar red = color[0] / 255;\n\tvar green = color[1] / 255;\n\tvar blue = color[2] / 255;\n\n\tvar max = Math.max(red, green, blue);\n\tvar min = Math.min(red, green, blue);\n\n\tvar hue;\n\tvar saturation;\n\tvar lightness = (max + min) / 2;\n\n\thue = saturation = 0;\n\n\tif (max !== min) {\n\t\tvar delta = max - min;\n\t\tsaturation = delta / (lightness > 0.5 ? 2 - max - min : max + min);\n\t\tif (max === red) {\n\t\t\thue = (green - blue) / delta + ((green < blue) * 6);\n\t\t}\n\t\telse if (max === green) {\n\t\t\thue = (blue - red) / delta + 2;\n\t\t}\n\t\telse {\n\t\t\thue = (red - green) / delta + 4;\n\t\t}\n\t\thue /= 6;\n\t}\n\n\treturn [hue * 360, saturation * 100, lightness * 100, color[3]];\n}\n\n/**\n * Filter rules by matching the element and at least one property\n *\n * @param  {{<string>: Array.<{_selector: string, _rule: CSSRule}>}} rules\n * @param  {Element}                                                 element\n * @param  {string}                                                  prop\n * @return {Array.<{_selector: string, _rule: CSSRule}>}\n */\nfunction filterRulesByElementAndProp(rules, element, prop) {\n\tvar foundRules = [];\n\tif (element.id) {\n\t\tfoundRules = foundRules.concat(rules['#' + element.id] || []);\n\t}\n\telement.className.split(/\\s+/).forEach(function(className) {\n\t\tfoundRules = foundRules.concat(rules['.' + className] || []);\n\t});\n\tfoundRules = foundRules\n\t\t.concat(rules[element.tagName.toLowerCase()] || [])\n\t\t.concat(rules['*'] || []);\n\treturn foundRules.filter(function(rule) {\n\t\treturn rule._rule.style.getPropertyValue(prop)\n\t\t\t&& (\n\t\t\t\t!rule._rule.parentRule\n\t\t\t\t|| rule._rule.parentRule.type !== 4 // @media rule\n\t\t\t\t|| matchesMedia(rule._rule.parentRule.media.mediaText)\n\t\t\t)\n\t\t\t&& elementMatchesSelector(element, rule._selector);\n\t});\n}\n\n/**\n * @param  {Element} element\n * @param  {string}  selector\n * @return {boolean}\n */\nfunction elementMatchesSelector(element, selector) {\n\tvar func = element.matches\n\t\t|| element.mozMatchesSelector\n\t\t|| element.msMatchesSelector\n\t\t|| element.oMatchesSelector\n\t\t|| element.webkitMatchesSelector;\n\treturn func.call(element, selector);\n}\n\n/**\n * @param  {Array.<{_specificity: number}>} rules\n * @return {Array.<{_specificity: number}>}\n */\nfunction sortRulesBySpecificity(rules) {\n\treturn rules.map(function(rule, i) {\n\t\treturn [rule, i];\n\t}).sort(function(a, b) {\n\t\treturn (b[0]._specificity - a[0]._specificity) || b[1] - a[1];\n\t}).map(function(rule) {\n\t\treturn rule[0];\n\t});\n}\n\n/**\n * @param  {string} selector\n * @return {number}\n */\nfunction getSpecificity(selector) {\n\n\tvar idScore = 0;\n\tvar classScore = 0;\n\tvar typeScore = 0;\n\n\tselector\n\t\t.replace(SELECTOR_ESCAPED_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(SELECTOR_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(ATTR_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_NOT_REGEXP, ' ')\n\t\t.replace(ID_REGEXP, function() {\n\t\t\tidScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(CLASS_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_ELEMENT_REGEXP, function() {\n\t\t\ttypeScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(PSEUDO_CLASS_REGEXP, function() {\n\t\t\tclassScore++;\n\t\t\treturn '';\n\t\t})\n\t\t.replace(ELEMENT_REGEXP, function() {\n\t\t\ttypeScore++;\n\t\t\treturn '';\n\t\t});\n\n\treturn (\n\t\t(idScore * 256 * 256)\n\t\t+ (classScore * 256)\n\t\t+ typeScore\n\t);\n\n}\n\n/**\n * Create a new Map or a simple shim of it in non-supporting browsers\n *\n * @return {Map}\n */\nfunction createCacheMap() {\n\n\tif (typeof Map === 'function') {\n\t\treturn new Map();\n\t}\n\n\tvar keys = [];\n\tvar values = [];\n\n\tfunction getIndex(key) {\n\t\treturn keys.indexOf(key);\n\t}\n\n\tfunction get(key) {\n\t\treturn values[getIndex(key)];\n\t}\n\n\tfunction has(key) {\n\t\treturn getIndex(key) !== -1;\n\t}\n\n\tfunction set(key, value) {\n\t\tvar index = getIndex(key);\n\t\tif (index === -1) {\n\t\t\tindex = keys.push(key) - 1;\n\t\t}\n\t\tvalues[index] = value;\n\t}\n\n\tfunction deleteFunc(key) {\n\t\tvar index = getIndex(key);\n\t\tif (index === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tdelete keys[index];\n\t\tdelete values[index];\n\t\treturn true;\n\t}\n\n\tfunction forEach(callback) {\n\t\tkeys.forEach(function(key, index) {\n\t\t\tif (key !== undefined) {\n\t\t\t\tcallback(values[index], key);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tset: set,\n\t\tget: get,\n\t\thas: has,\n\t\tdelete: deleteFunc,\n\t\tforEach: forEach,\n\t};\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction hasClass(element, className) {\n\tif (element.classList) {\n\t\treturn element.classList.contains(className);\n\t}\n\treturn !!element.className.match(new RegExp(\n\t\t'(?:^|\\\\s+)'\n\t\t+ className.replace(REGEXP_ESCAPE_REGEXP, '\\\\$&')\n\t\t+ '($|\\\\s+)'\n\t));\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction addClass(element, className) {\n\tif (element.classList) {\n\t\telement.classList.add(className);\n\t}\n\telse if (!hasClass(element, className)) {\n\t\telement.className += ' ' + className;\n\t}\n}\n\n/**\n * @param {Element} element\n * @param {string}  className\n */\nfunction removeClass(element, className) {\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\telement.className = element.className.replace(\n\t\t\tnew RegExp(\n\t\t\t\t'(?:^|\\\\s+)'\n\t\t\t\t+ className.replace(REGEXP_ESCAPE_REGEXP, '\\\\$&')\n\t\t\t\t+ '($|\\\\s+)'\n\t\t\t),\n\t\t\t'$1'\n\t\t);\n\t}\n}\n\n/**\n * @param  {string} media\n * @return {boolean}\n */\nfunction matchesMedia(media) {\n\tif (window.matchMedia) {\n\t\treturn window.matchMedia(media).matches;\n\t}\n\treturn (window.styleMedia || window.media).matchMedium(media);\n}\n\n/**\n * Array.from or a simple shim for non-supporting browsers\n *\n * @param  {{length: number}} arrayLike\n * @return {array}\n */\nfunction arrayFrom(arrayLike) {\n\tif (Array.from) {\n\t\treturn Array.from(arrayLike);\n\t}\n\tvar array = [];\n\tfor (var i = 0; i < arrayLike.length; i++) {\n\t\tarray[i] = arrayLike[i];\n\t}\n\treturn array;\n}\n\nreturn api;\n\n}));\n\n})(window, document);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 1 */,
/* 2 */,
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!*******************************************!*\
  !*** ./source/assets/javascripts/main.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _cqProlyfill = __webpack_require__(/*! cq-prolyfill */ 0);\n\nvar _cqProlyfill2 = _interopRequireDefault(_cqProlyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _cqProlyfill2.default)({\n  postcss: true\n}); // import $ from 'jQuery';//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zb3VyY2UvYXNzZXRzL2phdmFzY3JpcHRzL21haW4uanM/ODMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgJCBmcm9tICdqUXVlcnknO1xuaW1wb3J0IGNxIGZyb20gJ2NxLXByb2x5ZmlsbCc7XG5cbmNxKHtcbiAgcG9zdGNzczogdHJ1ZVxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc291cmNlL2Fzc2V0cy9qYXZhc2NyaXB0cy9tYWluLmpzIl0sIm1hcHBpbmdzIjoiOztBQUNBO0FBQ0E7Ozs7O0FBQ0E7QUFDQTtBQURBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }
/******/ ]);